plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "org.jlleitschuh.gradle.ktlint" version "11.0.0"
    id "io.gitlab.arturbosch.detekt" version"1.23.1"
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.jorotayo.fl_datatracker"
        minSdk 31
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of("11"))
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.jorotayo.fl_datatracker'

    kapt {
        correctErrorTypes true
    }
}

ktlint{
    android = true
    ignoreFailures = false
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha02'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.compose.ui:ui:1.5.0'
    implementation 'androidx.compose.material:material:1.5.0'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'de.charlex.compose:bottom-drawer-scaffold:1.1.0-beta02'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.21'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.compose.material3:material3:1.1.1'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.3"
    debugImplementation "androidx.compose.ui:ui-tooling:1.5.0"

    // constraint layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // FlowLayout
    implementation 'com.google.accompanist:accompanist-flowlayout:0.28.0'

    // Compose dependencies
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.navigation:navigation-compose:2.7.1'
    implementation 'androidx.compose.material:material-icons-extended:1.5.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Splash API
    implementation 'androidx.core:core-splashscreen:1.0.1'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'

    // Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.46.1'
    kapt 'com.google.dagger:hilt-compiler:2.46.1'

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.46.1'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    kaptTest 'com.google.dagger:hilt-compiler:2.46.1'

    // Kotlin Extensions and Coroutines support for Room
    implementation 'androidx.room:room-ktx:2.5.2'

    // Pager and Indicators - Accompanist
    implementation 'com.google.accompanist:accompanist-pager:0.28.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.28.0'

    // Accompanist status Bar
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.28.0'

    // Kotlinx Serializer
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1')

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //LiveData
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.0'

    // Glide Image Picker
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"

    // ObjectBox
    debugImplementation('io.objectbox:objectbox-android-objectbrowser:3.6.0')
    releaseImplementation('io.objectbox:objectbox-android:3.6.0')

    // Coil Image Picker
    implementation('io.coil-kt:coil-compose:2.4.0')

}

apply plugin: 'io.objectbox'

def projectSource = file(projectDir)
def configFile = file("$projectSource/config/detekt/detekt.yml")
def baselineFile = file("$rootDir/config/detekt/baseline.xml")
def kotlinFiles = "**/*.kt"
def resourceFiles = "**/resources/**"
def buildFiles = "**/build/**"

apply plugin: 'io.gitlab.arturbosch.detekt'

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.16.0"
}

task installDetektGitHook(type: Copy){
    from new File(rootProject.rootDir, 'scripts/pre-push')
    into { new File(rootProject.rootDir, '.git/hooks')}
    fileMode 0775
}

//detekt {
//    toolVersion = "$detekt_version"
//    source = files("$rootProject")
//allRules = true
////    filters = ".*/resources/.*,.*/build/.*"
//    config.setFrom("$rootDir/config/detekt/detekt-config.yml")
//    autoCorrect = true
//    reports {
//        xml.enabled(true)
//        html.enabled(true)
//        txt.enabled(true)
//    }
//}
detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = true // activate all available (even unstable) rules.
    config.setFrom("$rootDir/config/detekt/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$rootDir/config/detekt/baseline.xml") // a way of suppressing issues before introducing detekt
    autoCorrect = true
}